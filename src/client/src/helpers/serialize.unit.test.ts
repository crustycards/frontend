import {User} from '../../../../proto-gen-out/crusty_cards_api/model_pb';
import {
  opaqueSerializedStringToUint8Array,
  uint8ArrayToOpaqueSerializedString
} from './serialize';

describe('Uint8Array serialization/deserialization', () => {
  it('handles non-empty values', () => {
    // Can serialize and deserialize empty array.
    expect(
      opaqueSerializedStringToUint8Array(
        uint8ArrayToOpaqueSerializedString(new Uint8Array()))
    ).toEqual(new Uint8Array());

    // Can convert from Uint8Array and back.
    // We're testing this using a User proto.
    // The User proto is used arbitrarily - we
    // could have used any proto since we're only
    // doing this to call serializeBinary(),
    // which produces a Uint8Array.
    const user = new User();
    user.setName('testUser');
    const reserializedUser = User.deserializeBinary(
      opaqueSerializedStringToUint8Array(
        uint8ArrayToOpaqueSerializedString(user.serializeBinary()))
    );
    expect(reserializedUser.getName()).toEqual('testUser');
  });

  it('handles invalid string inputs', () => {
    // Throws an error when given a value that
    // wasn't generated by the serializer function.
    expect(() => opaqueSerializedStringToUint8Array('Hello world'))
      .toThrow('Value is not properly encoded.');
  });
});
